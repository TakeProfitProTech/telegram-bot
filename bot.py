import csv
from telegram import Update,  InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler, MessageHandler, filters
from rapidfuzz import fuzz

# 1. Bot's token from @BotFather
# BOT_TOKEN = "7861685554:AAFW8j6xOdTW019R7aA-vzVwByYxtrEbwic"  # release
BOT_TOKEN = "8414266678:AAEe23aYGaMR7deZaPry-Jmq3F-osPTLa5k"  # test 

# 2. Admin's chat_id (—É–∑–Ω–∞—Ç—å —á–µ—Ä–µ–∑ @userinfobot –∏–ª–∏ —á–µ—Ä–µ–∑ getUpdates)
# ADMIN_ID = 7550325157  # release
ADMIN_ID = 7690200390   # test

# Loading questions and answers
QUESTIONS = []
with open("questions.csv", "r", encoding="utf-8") as f:
  reader = csv.DictReader(f, delimiter="\t")  # <- tab-delimiter
  for row in reader:
    # row["questions"] contains varians, comma separated
    variants = [v.strip().lower() for v in row["questions"].split(",")]
    QUESTIONS.append( (variants, row["answers"]) )

# *********************************************************************************************************************
#
def get_self_presentation():
  message = "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–¥—Ä–µ–π. –Ø\u00A0- –ª–∏–¥–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Ç—Ä–µ–π–¥–µ—Ä —Å –±–æ–ª–µ–µ —á–µ–º 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö.\n\n"
  message += "–Ø –º–æ–≥—É <a href='https://ru.take-profit.pro/learn/'>–Ω–∞—É—á–∏—Ç—å</a> —Ç–µ–±—è –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –±–∏—Ä–∂–µ (–≤–∫–ª—é—á–∞—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤–≤—ã –º–æ–µ–π —Ç–æ—Ä–≥–æ–≤–æ–π –º–µ—Ç–æ–¥–∏–∫–∏ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ —Ç–≤–æ–µ–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ) –∏–ª–∏ –ø–æ–º–æ–≥—É –ø–æ–ª—É—á–∞—Ç—å <a href='https://ru.take-profit.pro/copy-trading/'>–ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥</a> –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –∫–æ–ø–∏-—Ç—Ä–µ–π–¥–∏–Ω–≥–∞.\n\n"
  message += "–£—Å–ø–µ—à–Ω–æ—Å—Ç—å –º–æ–µ–π —Ä–∞–±–æ—Ç—ã –∏ –º–æ–µ–π —Ç–æ—Ä–≥–æ–≤–æ–π –º–µ—Ç–æ–¥–∏–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∏–∑ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"
  message += " (—Å–º. <a href='https://www.myfxbook.com/members/AndreiSM7/smartmoney/11576977'>–∑–¥–µ—Å—å</a>)"
  return message
# end of def

# *********************************************************************************************************************
#
def get_our_mission_and_services():
  message = "–ù–∞—à–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è\u00A0- –±–∏—Ä–∂–µ–≤–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è.\n–ù–∞—à–∞ —Ü–µ–ª—å\u00A0- –ø–æ–º–æ—á—å –∫–ª–∏–µ–Ω—Ç–∞–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ.\n–ù–∞—à–∏ —É—Å–ª—É–≥–∏:\nüéì–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ,\nüìà—Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–π–¥–µ—Ä–∞\nüí∞–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ –æ—Ç —Ç—Ä–µ–π–¥–∏–Ω–≥–∞.";
  return message
# end of def

# *************************************************************************************************************************
# Returns a clickable link to the user: https://t.me/username if username is found, tg://user?id=USER_ID if not
def get_clickable_user(user):
  if user.username:
    return f"<a href='https://t.me/{user.username}'>@{user.username}</a>"
  else:
    return f"<a href='tg://user?id={user.id}'>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id}</a>"
# end of def


# *************************************************************************************************************************
# 
def get_main_menu():
  keyboard = [
    [ 
      InlineKeyboardButton("‚ÑπÔ∏è\u00A0\u00A0–û –Ω–∞—Å / –£—Å–ª—É–≥–∏", callback_data="about"),
      InlineKeyboardButton( "üåê –ù–∞—à —Å–∞–π—Ç", url="https://ru.take-profit.pro")
    ],
    [
      InlineKeyboardButton("üéì\u00A0\u00A0–û–±—É—á–µ–Ω–∏–µ", callback_data="courses"),
      InlineKeyboardButton("üìà\u00A0\u00A0–¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã", callback_data="signals")
    ],
    [ InlineKeyboardButton("üí∞\u00A0\u00A0–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ (–∫–æ–ø–∏-—Ç—Ä–µ–π–¥–∏–Ω–≥)", callback_data="copy") ],
    [
      InlineKeyboardButton("ü§ñ\u00A0\u00A0–°–ø—Ä–æ—Å–∏—Ç—å –±–æ—Ç", callback_data="ask_bot"),
      InlineKeyboardButton("üìû\u00A0\u00A0–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", callback_data="ask_admin")
    ]
  ]
  return InlineKeyboardMarkup(keyboard)



# ***************************************************************************************************
# 
async def reply_to_about_query( update: Update, context: ContextTypes.DEFAULT_TYPE ):
  with open("images/Andrey_256x256.png", "rb") as img:
    await context.bot.send_photo( chat_id = update.effective_chat.id, photo=img, caption="" )

  message = get_self_presentation()
  await update.callback_query.message.reply_text( message, parse_mode="HTML", reply_markup=get_main_menu(), disable_web_page_preview=True )      
# end of def

# ***************************************************************************************************
# 
async def reply_to_courses_query( update: Update, context: ContextTypes.DEFAULT_TYPE ):
  message = '''
    –û–±—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–æ–≤:\n
    1) <b>–¢–µ–æ—Ä–∏—è.</b> –í—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è: –±—É–¥–µ—Ç–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –Ω–∞—É—á–∏—Ç–µ—Å—å –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–µ –Ω–∞ –Ω–µ–º, –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –º–æ–µ–π —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π.\n
    –ö—É—Ä—Å –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´–¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ Smart Money¬ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è <b>–±–µ—Å–ø–ª–∞—Ç–Ω–æ</b>. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è\u00A0- –ø–µ—Ä–µ–π–¥–∏—Ç–µ <a href="https://ru.take-profit.pro/courses/smartmoney/">–Ω–∞ –Ω–∞—à —Å–∞–π—Ç</a>.\n
    2) <b>–ü—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ –±–µ–∫—Ç–µ—Å—Ç–µ</b> (–ø–æ –∂–µ–ª–∞–Ω–∏—é). –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Ç–µ–æ—Ä–∏—é –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö: —É—á–∏–º—Å—è —Å–æ–±–∏—Ä–∞—Ç—å —Ä–∞–±–æ—á–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫, –≤—Ä–µ–º—è –≤—Ö–æ–¥–æ–≤, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç, —É—á–∏–º—Å—è –∫–æ–Ω—Ç—Ä–æ–ª—é —ç–º–æ—Ü–∏–π –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ.\n
    3) <b>–¢–æ—Ä–≥–æ–≤–ª—è –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å—á–µ—Ç–µ</b>. –ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫—É—Ä—Å–∞ (–∏, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –ø—Ä–∞–∫—Ç–∏–∫–∏) –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Ç—Ä–µ–π–¥–µ—Ä–æ–≤: –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ —Ä—ã–Ω–∫—É –∏ —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –∏ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ —Å –Ω–∞–º–∏.
  '''
  await update.callback_query.message.reply_text( message, parse_mode="HTML", reply_markup=get_main_menu(), disable_web_page_preview=True )      
# end of def

# ***************************************************************************************************
# 
async def reply_to_signals_query( update: Update, context: ContextTypes.DEFAULT_TYPE ):
  message = '''
    –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –í–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Ç—Ä–µ–π–¥–µ—Ä–æ–≤, –≥–¥–µ –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞—à—É –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ —Ä—ã–Ω–∫—É –∏ –Ω–∞—à–∏ —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –∏ —Å–º–æ–∂–µ—Ç–µ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ —Å –Ω–∞–º–∏.\n
    üìû–ï—Å–ª–∏ –í—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å\u00A0- —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏".
  '''
  await update.callback_query.message.reply_text( message, parse_mode="HTML", reply_markup=get_main_menu(), disable_web_page_preview=True )      
# end of def

# ***************************************************************************************************
# 
async def reply_to_copy_query( update: Update, context: ContextTypes.DEFAULT_TYPE ):
  message = '''
    –•–æ—Ç–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ, –Ω–æ –Ω–µ –≥–æ—Ç–æ–≤—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Å–∏–¥–µ—Ç—å –∑–∞ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏? E—Å—Ç—å —Ä–µ—à–µ–Ω–∏–µ\u00A0‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—à–∏—Ö —Å–¥–µ–ª–æ–∫ –Ω–∞ –í–∞—à–µ–º —Å—á–µ—Ç–µ (–∫–æ–ø–∏-—Ç—Ä–µ–π–¥–∏–Ω–≥).\n
    –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
    1. –í—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –ª–∏—á–Ω—ã–π –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å—á—ë—Ç —É –æ–¥–Ω–æ–≥–æ –∏–∑ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –º–Ω–æ—é –±—Ä–æ–∫–µ—Ä–æ–≤ (–∏–ª–∏ –ø–æ –í–∞—à–µ–º—É –≤—ã–±–æ—Ä—É).
    2. –ü–æ–ø–æ–ª–Ω—è–µ—Ç–µ —Å—á–µ—Ç –Ω–∞ —Å—É–º–º—É –æ—Ç 200 USD.
    3. –ü–æ–¥–∫–ª—é—á–∞–µ—Ç–µ—Å—å –∫ –Ω–∞–º —á–µ—Ä–µ–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.\n
    –° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Å–µ –Ω–∞—à–∏ —Å–¥–µ–ª–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è –Ω–∞ –í–∞—à–µ–º —Å—á—ë—Ç–µ (–≤ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ –∫ –¥–µ–ø–æ–∑–∏—Ç—É), 
    –∞ –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –≤—Å–µ–≥–¥–∞ –±—É–¥—É—Ç –í–∞—à–∏–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º ‚Äî –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω—è—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n
    üìû–ï—Å–ª–∏ –í—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å\u00A0- —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏".
  '''
  await update.callback_query.message.reply_text( message, parse_mode="HTML", reply_markup=get_main_menu(), disable_web_page_preview=True )      
# end of def

# ***************************************************************************************************
# 
async def reply_to_ask_admin_query( update: Update, context: ContextTypes.DEFAULT_TYPE ):
  clickable_user = get_clickable_user( update.effective_user )
  toAdmin = f"üì® –ó–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" \
    f"üë§ {clickable_user}\n\n" \
    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º."

  await context.bot.send_message(
    chat_id=ADMIN_ID,
    text = toAdmin,
    parse_mode = "HTML",
    #disable_web_page_preview = True
  )

  await update.callback_query.message.reply_text("ü§ñ‚úÖ\u00A0\u00A0–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24-—Ö —á–∞—Å–æ–≤.")
# end of def


# *************************************************************************************************
# Menu button handler
#
async def main_menu_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
  query = update.callback_query
  await query.answer()

  if query.data == "about":
    await reply_to_about_query( update, context )
  elif query.data == "courses":
    await reply_to_courses_query( update, context )
  elif query.data == "signals":
    await reply_to_signals_query( update, context )
  elif query.data == "copy":
    await reply_to_copy_query( update, context )
  elif query.data == "ask_bot":
    await query.message.reply_text("ü§ñ\u00A0\u00A0 –ù–∞–ø–∏—à–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å:")
  elif query.data == "ask_admin":
    await reply_to_ask_admin_query( update, context )
# end of main_menu_button_handler


# *************************************************************************************************
# Bot functionality
#
async def user_message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
  text = update.message.text.lower().strip()

  best_score = 0
  best_answer = None

  for variants, answer in QUESTIONS:
    for variant in variants:
      score = fuzz.partial_ratio(text, variant)
      if score > best_score:
        best_score = score
        best_answer = answer

  if best_score > 70:
    await update.message.reply_text( "ü§ñ\u00A0\u00A0" + best_answer, reply_markup=get_main_menu(), parse_mode="HTML" )
  else:
    await update.message.reply_text(
      "ü§ñü§î\u00A0\u00A0–ù–µ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –ø–æ–Ω—è–ª –≤–∞—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ \"üìû\u00A0\u00A0–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏\".",
      reply_markup=get_main_menu(),
    )

'''
  # Sending to admin
  user = update.effective_user
  await context.bot.send_message(
    chat_id = ADMIN_ID,
    text = f"üì® –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç @{user.username or user.id}:\n\n{text}",
  )
'''
# end of message_handler


# ************************************************************************
# "/start" command handler
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
  arg = context.args[0] if context.args else ""

  # No arg - a user pushed "/start" and no parameters are given
  if arg == "":
    toUser = f"ü§ñ\u00A0\u00A0<i>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å –Ω–∞ –∫–∞–Ω–∞–ª–µ –ø—Ä–æ–µ–∫—Ç–∞ <a href='https://ru.take-profit.pro'>Take-Profit.Pro</a></i>.\n"
    toUser += get_our_mission_and_services()
    # Sending the message to the user 
    await update.message.reply_text( f"{toUser}", parse_mode = "HTML", reply_markup = get_main_menu() )      
    return

  # A user wants to contact us (from the web-site)
  toUser = "ü§ñ\u00A0\u00A0<i>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</i>\n";
  toAdmin = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è.\n"

  if arg == "courses":
    toUser += "–í—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –æ–±—É—á–µ–Ω–∏–µ–º - –æ—Ç–ª–∏—á–Ω–æ!\n"
    toUser += "‚åõ <b>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</b>\n"
    toAdmin = "–•–æ—á—É –ø—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ"
  elif arg == "signals":
    toUser += "–í—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ - –æ—Ç–ª–∏—á–Ω–æ!\n"
    toUser += "‚åõ <b>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</b>\n"
    toAdmin = "–•–æ—á—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –∏ –ø–æ–ª—É—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã"
  elif arg == "copy":
    toUser += "–í—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ - –æ—Ç–ª–∏—á–Ω–æ!\n"
    toUser += "‚åõ <b>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</b>\n"
    toAdmin = "–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ (–∫–æ–ø–∏-—Ç—Ä–µ–π–¥–∏–Ω–≥)"
  elif arg == "practice":
    toUser += "–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö - –æ—Ç–ª–∏—á–Ω–æ!\n"
    toUser += "‚åõ <b>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</b>\n"
    toAdmin = "–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ –±–µ–∫—Ç–µ—Å—Ç–µ"
  elif arg == "other":
    toUser += "‚åõ <b>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.</b>\n"
    toAdmin = "–û–±—â–∏–π –≤–æ–ø—Ä–æ—Å"
  else:
    toUser += "‚åõ <b>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</b>\n"

  toUser += "\n\n<i>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—è–≤–∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É!</i>"

  # To User
  await update.message.reply_text( f"{toUser}", parse_mode = "HTML", reply_markup = get_main_menu() )      

  # To Admin
  clickable_user = get_clickable_user(update.effective_user)
  await context.bot.send_message( chat_id = ADMIN_ID, text = f"üì© From: {clickable_user}\nSubject:\n{toAdmin}", parse_mode = "HTML" )
# end of def


def main():
  app = Application.builder().token(BOT_TOKEN).build()
  app.add_handler(CommandHandler("start", start))
  app.add_handler(CallbackQueryHandler(main_menu_button_handler))
  app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, user_message_handler))
  app.run_polling()

if __name__ == "__main__":
  main()
